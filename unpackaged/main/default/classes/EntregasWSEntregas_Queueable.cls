public without sharing class EntregasWSEntregas_Queueable implements Queueable, Database.AllowsCallouts{

    List<xmlnsOracleComJavergtiEntrega.RowType> resultados = new List<xmlnsOracleComJavergtiEntrega.RowType>();
    LogATC__c log = new LogATC__c();
    Map<String, Account> rCuenta = new Map<String, Account>();
    Map<String, Inventario__c> rInventario = new Map<String, Inventario__c>();
    Integer daysBefore;

    Date defaultDate = date.newInstance(1900, 1, 1);

    public EntregasWSEntregas_Queueable(Integer daysBefore, LogATC__c log, Map<String, Account> rCuenta, Map<String, Inventario__c> rInventario){
        this.daysBefore = daysBefore;
        this.resultados = resultados;
        this.log = log;
        this.rCuenta = rCuenta;
        this.rInventario = rInventario;
    }
    
    public void execute(QueueableContext context){
        try{
            recursionCheck.entregasWS = true;

            xmlnsOracleComJavergtiEntrega.bpelQueryEntrega_pt wsPort = new xmlnsOracleComJavergtiEntrega.bpelQueryEntrega_pt();
            wsPort.timeout_x = 120000;	
            xmlnsOracleComJavergtiEntrega.getEntregaRs_element respuesta = new xmlnsOracleComJavergtiEntrega.getEntregaRs_element();
            respuesta = wsPort.getEntrega(daysBefore);

            xmlnsOracleComJavergtiEntrega.Result_element mensaje = respuesta.Result;
            xmlnsOracleComJavergtiEntrega.ReporteEntrega_element reporteEntrega = respuesta.ReporteEntrega;
            List<xmlnsOracleComJavergtiEntrega.RowType> resultados = new List<xmlnsOracleComJavergtiEntrega.RowType>();
            resultados.addAll(reporteEntrega.Row);   

            Map<String, PaqueteEntrega__c> rEntrega = new Map<String, PaqueteEntrega__c>();
            List<PaqueteEntrega__c> upsertPaquetes = new List<PaqueteEntrega__c>();

            List<String> filtroEntregas = new List<String>();
            List<Entrega__c> upsertEntregas = new List<Entrega__c>();
            Map<String, Id> entregas = new Map<String, Id>();

            for(xmlnsOracleComJavergtiEntrega.RowType obj : resultados){
                if(obj.Estatus != 'Firmado'){
                    filtroEntregas.add(obj.Manzana+'-'+obj.Lote+'-'+(obj.Nombre +' '+obj.Apellido_Paterno+' '+obj.Apellido_Materno).toUpperCase()+'_'+obj.Num_Proceso);
                }else{
                    log.Mensaje__c += '\r\n';
                    log.Mensaje__c += 'Proceso con estatus no v√°lido: '+ obj.Num_Proceso + ' - ' + obj.Nombre +' '+obj.Apellido_Paterno+' '+obj.Apellido_Materno ;
                    log.Mensaje__c += '\r\n';
                    log.Mensaje__c += '\r\n';
                }
            }

            for(Entrega__c e : [SELECT Id, Name FROM Entrega__c WHERE Name IN :filtroEntregas LIMIT 48000]){
                entregas.put(e.Name, e.Id);
            }

            for(xmlnsOracleComJavergtiEntrega.RowType obj : resultados){
                if(obj.Estatus != 'Firmado' && rCuenta.containsKey(obj.Numero_cliente) && rInventario.containsKey(obj.Numero_Interno)){
                    Entrega__c entrega = new Entrega__c();
                    
                    entrega.Estatus__c = obj.Estatus;

                    if(obj.Fecha_de_Escritura != defaultDate){
                        entrega.FechaEscritura__c = obj.Fecha_de_Escritura;
                    }

                    if(obj.Fecha_de_Entrega != defaultDate){
                        entrega.FechaEntrega__c = obj.Fecha_de_Entrega;
                    }
                    
                    entrega.Paquete__c = obj.Check_de_Paquete.equals('Y') ? true : false;
                    entrega.Producto__c = obj.Check_de_Producto.equals('Y') ? true : false;
                    entrega.Mejora__c = obj.Check_de_Mejora.equals('Y') ? true : false;
                    
                    Inventario__c inventario = rInventario.get(obj.Numero_Interno);
                    Account cuenta = rCuenta.get(obj.Numero_cliente);
                    
                    entrega.Inventario__c = inventario.Id;
                    entrega.Cuenta__c = cuenta.Id;
                    
                    String nombrec = 
                        cuenta.Nombre_cta__c.toUpperCase() + ' ' 
                        + cuenta.Apellidopaterno_cta__c.toUpperCase() + ' ' 
                        + cuenta.Apellidomaterno_cta__c.toUpperCase();
                    
                    String filename = inventario.Manzana__c + '-' +inventario.Lote__c + '-' + nombrec + '_' + obj.Num_Proceso;
                    
                    entrega.Name = filename;

                    try{
                        entrega.Id = entregas.get(filename);
                    }catch(Exception p){
                        
                    }

                    upsertEntregas.add(entrega);

                    for(xmlnsOracleComJavergtiEntrega.PaqueteType ofs: obj.arreglo_paquetes.Paquete){
                        PaqueteEntrega__c paquete = new PaqueteEntrega__c();
                        
                        paquete.TipoPaquete__c = ofs.Tipo_paquete;
                        paquete.DescripcionPaquete__c = ofs.Descripcion_paquete;
                        //paquete.FechaSolicitudPaquete__c = ofs.Fecha_Solicitud_Paquete == defaultDate ? null : ofs.Fecha_Solicitud_Paquete;
                        
                        if(ofs.Paquete_Entregado != null && !ofs.Paquete_Entregado.equals('')){
                            paquete.Estatus__c = ofs.Paquete_Entregado;
                        }else{
                            paquete.Estatus__c = 'Sin Estatus';
                        }
                        
                        //paquete.FechaEntregaPaquete__c = ofs.Fecha_Entrega_Paquete == defaultDate ? null : ofs.Fecha_Entrega_Paquete;
                        rEntrega.put(entrega.Name, paquete);
                    }
                }
            }

            upsert upsertEntregas;
            log.Mensaje__c += 'Entregas Insertadas/Actualizadas: '+upsertEntregas.size();
            log.Mensaje__c += '\r\n';

            List<Id> idsBorrar = new List<Id>();
                
            for(Entrega__c e : upsertEntregas){
                //system.debug('ENTREGA: '+ e.Id);
                idsBorrar.add(e.Id);
            }
            
            List<PaqueteEntrega__c> borrarPaquetes = [SELECT Id FROM PaqueteEntrega__c WHERE Entrega__c IN :idsBorrar];
            if(borrarPaquetes != null){
                delete borrarPaquetes;
            }
            
            Set<PaqueteEntrega__c> helpPaquetes = new Set<PaqueteEntrega__c>();
            
            for(Entrega__c en :upsertEntregas){
                PaqueteEntrega__c paquete = rEntrega.get(en.Name);
                
                paquete.Entrega__c = en.Id;
                try{
                    if(paquete.TipoPaquete__c != null && !paquete.TipoPaquete__c.equals(' ')){
                        //system.debug(paquete.TipoPaquete__c);
                        helpPaquetes.add(paquete);
                    }
                }catch(Exception o){
                    
                }
            }
            
            upsertPaquetes.addAll(helpPaquetes);
            log.Mensaje__c += 'Paquetes Insertados/Actualizados: '+upsertPaquetes.size();
            log.Mensaje__c += '\r\n';

            upsert log;
        }catch(Exception io){
            log.Mensaje__c += 'EXCEPTION: ' + io.getMessage() + ' - ' + io.getLineNumber() +' - ' + io.getCause() +' - '+io.getStackTraceString();
            log.Mensaje__c += '\r\n';
            insert log;
            
            testingClass();
        }
    }
    
     public void testingClass(){
       Integer i = 1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
         i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        i=1;
        
    }
}