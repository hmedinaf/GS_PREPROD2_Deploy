@isTest
public class WS_Invoicement_Test {
    static TestMethod void testMethod1() {
        Account acc = new Account();
        acc.FirstName= 'Lopez';
        acc.LastName= 'test';
        acc.RecordTypeId =Schema.sObjectType.Account.getRecordTypeInfosBydevelopername().get('Prospecto_Persona_Fisica').getRecordTypeId();
        acc.CorreoElectronico__c = 'test@prospects.com';
        acc.Apellidomaterno_cta__c = 'dahuoh';
        acc.PersonBirthdate=date.today().addyears(-20);
        acc.Phone = '+528119928819';
        acc.Otro_Telefono__c = '+528119928819';
        acc.TelefonoCelular__c='+525530303030'; 
        acc.Canal_de_Venta__c = 'PROSPECTO ASESOR';
        acc.Estatus_Lista_Negra_QEQ__c = 'VALIDADO';
        insert acc;
        Opportunity opp = new Opportunity(Name = 'Test Opportunity');
        opp.StageName = 'Validaci√≥n';
        opp.CloseDate = Date.today().adddays(10);
        insert opp;
        opp.AccountId = acc.Id;
        update opp;
        List<Consumo_Servicios__c> consumos = new List<Consumo_Servicios__c>();
        Consumo_Servicios__c CS = new Consumo_Servicios__c();
        CS.Cuenta__c = acc.id;
        CS.Nombre_del_servicio__c = 'test ';
        CS.Proceso_de_Venta__c = opp.id;
        insert CS;
        consumos.add(CS);
        RestRequest req = new RestRequest();
        
        RestResponse res = new RestResponse();
        Map<String, String> params1 = new Map<String, String>();
        params1.put('idsAObtener', String.join(new List<String>{consumos[0].Id}, ','));
        req.httpMethod ='GET';
        req.addParameter('idsAObtener', String.join(new List<String>{consumos[0].Id}, ','));
        WS_Invoicement.InvoiceItem invItem = new   WS_Invoicement.InvoiceItem ();
        invItem.ID_FACTURA_AR			= 10;
        invItem.LAST_UPD					= system.today();
        invItem.LAST_UPD_BY				= 'test';
        invItem.RESPUESTA_API				= 'test';
        invItem.CATEGORIA_DESC			= 'test';
        invItem.CONFLICT_ID				= 'test';
        invItem.CREATED						= system.today();
        invItem.CREATED_BY				= 'test';
        invItem.DB_LAST_UPD					= system.today();
        invItem.DB_LAST_UPD_SRC			= 'test';
        invItem.DOCUMENTO_APLICADO		= 'test';
        invItem.DOCUMENTO_CLASE			= 'test';
        invItem.DOCUMENTO_DESC			= 'test';
        invItem.DOCUMENTO_REF				= 'test';
        invItem.ENTIDAD_LEGAL				= 'test';
        invItem.ESTATUS_FACTURA			= 'test';
        invItem.ESTATUS_PROCESO			 = 10;		
        invItem.ESTATUS_REG				 = 10;		
        invItem.FECHA_CONTABLE		= system.today();
        invItem.FECHA_CREACION		= system.today();
        invItem.FECHA_REESTRUCTURA	= system.today();
        invItem.FECHA_VENCIMIENTO	= system.today();
        invItem.FIDEICOMISO_DESC			= 'test';
        invItem.FIDEICOMISO_FACT	 = 10;	
        invItem.FINANCIERA_DESC			= 'test';
        invItem.FINANCIERA_NUM			= 'test';
        invItem.ID_APLICAR_DOCTO = 10;	
        invItem.ID_CLASE		 = 10;	
        invItem.ID_CLIENTE_AR	 = 10;	
        invItem.ID_COBRANZA_MULTIPLE	 = 10;	
        invItem.ID_DIRECCION_REGIONAL = 10;	
        invItem.ID_DOCUMENTO_TIPO	 = 10;	
        invItem.ID_FACTURA_CRM			= 'test';
        invItem.ID_FRACCIONAMIENTO	 = 10;	
        invItem.ID_INTERFACE	 = 10;	
        invItem.ID_INTERFACE_CRM	= CS.Id;
        invItem.ID_LOTE			 = 10;	
        invItem.ID_MANZANA		 = 10;	
        invItem.ID_MUNICIPIO	 = 10;	
        invItem.ID_PAGARE_CONTA		 = 10;	
        invItem.ID_PAGARE_REVERSA	 = 10;	
        invItem.ID_PROCESO_AR		 = 10;	
        invItem.ID_PROTOTIPO		 = 10;	
        invItem.ID_REESTRUCTURA		 = 10;	
        invItem.ID_TIPO_FACTURA		 = 10;	
        invItem.IMPORTE_FACTURA		 = 10;	
        invItem.IND_ANTES_ESCRITURA	 = 10;	
        invItem.IND_GASTO_ADMIN		 = 10;	
        invItem.IND_INTERESES		 = 10;	
        invItem.IND_REEMBOLSO		 = 10;	
        invItem.IND_REESTRUCTURADO	 = 10;	
        invItem.MODIFICATION_NUM		 = 10;	
        invItem.MONEDA					= 'test';
        invItem.MONTO_FINANCIADO		 = 10;	
        invItem.NUM_CREDITO				= 'test';
        invItem.NUM_FACTURA				= 'test';
        invItem.ORIGEN_DESC				= 'test';
        invItem.REQUISICION_CRM			= 'test';
        invItem.RETRY_COUNT			 = 10;	
        invItem.ROW_ID					= 'test';
        invItem.TERM_PAGO					= 'test';
        invItem.TIPO_FACTURA				= 'test';
        invItem.VALOR_COB_JAVER		 = 10;	
        invItem.VALOR_OPERACION		 = 10;	
        invItem.MENSAJE_API			= 'test';
        WS_Invoicement.RequestService request = new WS_Invoicement.RequestService(new List<WS_Invoicement.InvoiceItem>{invItem});
        RestContext.request = req;
        Test.startTest();
        WS_Invoicement.upsertInvoices(request);
        WS_Invoicement.ResponseService response =  WS_Invoicement.getInvoice();
        Test.stopTest();
    }
    static TestMethod void testMethod2() {
        RestRequest req = new RestRequest();
        RestResponse res = new RestResponse();
        WS_Invoicement.InvoiceItem invItem = new   WS_Invoicement.InvoiceItem ();
        WS_Invoicement.RequestService request = new WS_Invoicement.RequestService(new List<WS_Invoicement.InvoiceItem>{invItem});
        RestContext.request = req;
        Test.startTest();
        WS_Invoicement.upsertInvoices(request);
        Test.stopTest();
    }
}